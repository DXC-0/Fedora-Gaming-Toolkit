#!/bin/bash

if [[ $EUID -ne 0 ]]; then
  echo "Ce script doit √™tre ex√©cut√© avec sudo !" >&2
  exit 1
fi

update_system() {
  echo "Mise √† jour du syst√®me..."
  dnf upgrade --refresh -y
}

# üì¶ Installation des d√©p√¥ts RPM Fusion
install_rpmfusion() {
  echo "üì¶ Installation des d√©p√¥ts RPM Fusion..."
  dnf install -y \
    https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm \
    https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
}

install_gpu_driver() {
  echo "D√©tection du GPU et installation des pilotes"
  GPU_INFO=$(lspci | grep -E "VGA|3D")
  echo "GPU d√©tect√© : $GPU_INFO"

  if echo "$GPU_INFO" | grep -qi "NVIDIA"; then
    echo "GPU NVIDIA d√©tect√©"
    dnf install -y akmod-nvidia xorg-x11-drv-nvidia-cuda
  elif echo "$GPU_INFO" | grep -qi "AMD"; then
    echo "GPU AMD d√©tect√©"
    dnf install -y mesa-dri-drivers mesa-libGL mesa-vulkan-drivers
  elif echo "$GPU_INFO" | grep -qi "Intel"; then
    echo "GPU Intel d√©tect√©"
  else
    echo "GPU non reconnu automatiquement"
  fi
}

install_codecs() {
  echo "üì¶  Installation des codecs multim√©dias..."
  dnf groupupdate -y multimedia --setop="install_weak_deps=False" --exclude=PackageKit-gstreamer-plugin
  dnf groupupdate -y sound-and-video
  dnf install -y gstreamer1-plugins-{base,good,bad-free,bad-freeworld,ugly} \
    gstreamer1-libav lame ffmpeg
}

install_gaming_tools() {
  echo "üéÆ Installation des outils gaming..."
  echo "üì¶ Installation de Lutris"
  dnf install -y lutris
  echo "üì¶ Installation de Steam"
  dnf install -y steam
  echo "üì¶ Installation de Wine et d√©pendances"
  dnf install -y wine winetricks
  echo "üì¶ Installation de Heroic Games Launcher"
  TMP_DIR="/tmp/heroic-install"
  mkdir -p "$TMP_DIR"
  cd "$TMP_DIR"
  RPM_URL="https://github.com/Heroic-Games-Launcher/HeroicGamesLauncher/releases/download/v2.18.1/heroic-2.18.1.rpm"
  wget "$RPM_URL" -O heroic.rpm
  dnf install -y ./heroic.rpm
  rm -rf "$TMP_DIR"
  
  echo "‚úÖ Outils gaming install√©s !"
}


install_proton_ge() {
  echo "üì¶ Installation de Proton GE (GloriousEggroll)..."
  PROTON_DIR="$HOME/.steam/root/compatibilitytools.d"
  mkdir -p "$PROTON_DIR"
  cd "$PROTON_DIR"

  echo "Recherche de la derni√®re version de proton"
  LATEST_URL=$(curl -s https://api.github.com/repos/GloriousEggroll/proton-ge-custom/releases/latest | grep "browser_download_url" | grep ".tar.gz" | cut -d '"' -f 4)

  if [[ -z "$LATEST_URL" ]]; then
    echo "Impossible de r√©cup√©rer la derni√®re version"
    return 1
  fi

  FILE_NAME=$(basename "$LATEST_URL")
  echo "üì¶ T√©l√©chargement : $FILE_NAME"
  wget "$LATEST_URL"

  echo "Extraction..."
  tar -xvf "$FILE_NAME"
  rm "$FILE_NAME"

  echo "‚úÖ Proton GE install√©"
}

install_proton_cachyos() {
  echo "üì¶ Installation de Proton-CachyOS"
  PROTON_DIR="$HOME/.steam/root/compatibilitytools.d"
  mkdir -p "$PROTON_DIR"
  cd "$PROTON_DIR"

  echo "Recherche de la derni√®re version de proton"
  LATEST_URL=$(curl -s https://api.github.com/repos/CachyOS/proton-cachyos/releases/latest | grep "browser_download_url" | grep ".tar.xz" | cut -d '"' -f 4)

  if [[ -z "$LATEST_URL" ]]; then
    echo "Impossible de r√©cup√©rer la derni√®re version"
    return 1
  fi

  FILE_NAME=$(basename "$LATEST_URL")
  echo "T√©l√©chargement : $FILE_NAME"
  wget "$LATEST_URL"

  echo "Extraction..."
  tar -xvf "$FILE_NAME"
  rm "$FILE_NAME"

  echo "‚úÖ Proton-CachyOS install√©"
}

while true; do
  echo ""
  echo "Fedora Gaming Toolkit"
  echo ""
  echo "1Ô∏è‚É£  Mettre √† jour le syst√®me"
  echo "2Ô∏è‚É£  Installer les d√©p√¥ts RPM Fusion"
  echo "3Ô∏è‚É£  D√©tecter le GPU et installer le pilote"
  echo "4Ô∏è‚É£  Installer les codecs multim√©dias"
  echo "5Ô∏è‚É£  Installer les outils de gaming (Steam, Lutris, Heroic)"
  echo "6Ô∏è‚É£  Installer Proton GE"
  echo "7Ô∏è‚É£  Installer Proton-CachyOS"
  echo "8Ô∏è‚É£  Installation automatis√©e"
  echo "0Ô∏è‚É£  Quitter"
  echo ""
  read -p "Choisis une options pour param√©trer ta fedora (en cas de doute, utilise l'installation automatis√©e) : " choice

  case $choice in
    1) update_system ;;
    2) install_rpmfusion ;;
    3) install_gpu_driver ;;
    4) install_codecs ;;
    5) install_gaming_tools ;;
    6) install_proton_ge ;;
    7) install_proton_cachyos ;;
    8)
      update_system
      install_rpmfusion
      install_gpu_driver
      install_codecs
      install_gaming_tools
      install_proton_ge
      install_proton_cachyos
      ;;
    0) echo "Merci d'avoir utilis√© mon script !"; exit 0 ;;
    *) echo "Option non valide" ;;
  esac
done
